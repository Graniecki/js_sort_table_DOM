{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","header","children","firstElementChild","tableBody","NAME","POSITION","AGE","SALARY","addEventListener","event","target","closest","append","sortRowsBy","sortString","sortNumber","value1","value2","index","innerText","sort","a","b","clearSalary","localeCompare","salary","split","join","arr","callback"],"mappings":";AAAA,aAWA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EATA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAASH,EAAMI,SAAS,GAAGC,kBAC3BC,EAAYN,EAAMI,SAAS,GAE3BG,EAAOJ,EAAOC,SAAS,GACvBI,EAAWL,EAAOC,SAAS,GAC3BK,EAAMN,EAAOC,SAAS,GACtBM,EAASP,EAAOC,SAAS,GAE/BJ,EAAMW,iBAAiB,QAAS,SAACC,GACzBC,IAAAA,EAASD,EAAMC,OAEjB,GAACA,EAAOC,QAAQ,SAsBZD,OAAAA,GACDN,KAAAA,EACHD,EAAUS,OAAVT,MAAAA,EAAoBU,EAAAA,EAAWV,EAAUF,SAAUa,EAAY,KAC/D,MACGT,KAAAA,EACHF,EAAUS,OAAVT,MAAAA,EAAoBU,EAAAA,EAAWV,EAAUF,SAAUa,EAAY,KAC/D,MACGR,KAAAA,EACHH,EAAUS,OAAVT,MAAAA,EAAoBU,EAAAA,EAAWV,EAAUF,SArBpCc,SAAWC,EAAQC,EAAQC,GAC3BF,OAAAA,EAAOf,SAASiB,GAAOC,UAAYF,EAAOhB,SAASiB,GAAOC,WAoBA,KAC/D,MACGZ,KAAAA,EACHJ,EAAUS,OAAVT,MAAAA,EAAoB,EAAA,EAAIA,EAAUF,UAAUmB,KAAK,SAACC,EAAGC,GAC5CC,OAAAA,EAAYF,EAAG,GAAKE,EAAYD,EAAG,OA9BvCR,SAAAA,EAAWE,EAAQC,EAAQC,GAC3BF,OAAAA,EAAOf,SAASiB,GAAOC,UAC3BK,cAAcP,EAAOhB,SAASiB,GAAOC,WAOjCI,SAAAA,EAAYE,EAAQP,GACpBO,OAAAA,EAAOxB,SAASiB,GAAOC,UAC3BO,MAAM,KAAKC,KAAK,IAAID,MAAM,KAAKC,KAAK,KAGhCd,SAAAA,EAAWe,EAAKC,EAAUX,GAC1B,OAAA,EAAIU,GAAKR,KAAK,SAACC,EAAGC,GAAMO,OAAAA,EAASR,EAAGC,EAAGJ","file":"main.3a534b99.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst header = table.children[0].firstElementChild;\nconst tableBody = table.children[1];\n\nconst NAME = header.children[0];\nconst POSITION = header.children[1];\nconst AGE = header.children[2];\nconst SALARY = header.children[3];\n\ntable.addEventListener('click', (event) => {\n  const target = event.target;\n\n  if (!target.closest('thead')) {\n    return;\n  }\n\n  function sortString(value1, value2, index) {\n    return value1.children[index].innerText\n      .localeCompare(value2.children[index].innerText);\n  }\n\n  function sortNumber(value1, value2, index) {\n    return value1.children[index].innerText - value2.children[index].innerText;\n  }\n\n  function clearSalary(salary, index) {\n    return salary.children[index].innerText\n      .split('$').join('').split(',').join('.');\n  }\n\n  function sortRowsBy(arr, callback, index) {\n    return [...arr].sort((a, b) => callback(a, b, index));\n  }\n\n  switch (target) {\n    case NAME :\n      tableBody.append(...sortRowsBy(tableBody.children, sortString, 0));\n      break;\n    case POSITION :\n      tableBody.append(...sortRowsBy(tableBody.children, sortString, 1));\n      break;\n    case AGE :\n      tableBody.append(...sortRowsBy(tableBody.children, sortNumber, 2));\n      break;\n    case SALARY :\n      tableBody.append(...[...tableBody.children].sort((a, b) => {\n        return clearSalary(a, 3) - clearSalary(b, 3);\n      }));\n  }\n});\n"]}